'''
SushiController - контролер, що керує логікою замовлення суші через взаємодію з моделлю та візуальним інтерфейсом.

Цей модуль відповідає за керування потоком виконання програми:
- Виводить меню для вибору суші через View.
- Запитує у користувача ID товару та кількість для додавання до замовлення.
- Обробляє помилки під час додавання товарів до замовлення.
- Запитує у користувача, чи бажає він продовжити замовлення.
- Після завершення формує та показує підсумкове замовлення.
- Виводить повідомлення подяки.

Основні функції:
- run() (запускає основний цикл роботи контролера)
- Використовує методи View для відображення меню, отримання вибору, показу замовлення та повідомлень.
- Взаємодіє з моделлю для оновлення замовлення та обробки даних.

Особливості:
- Взаємодіє з моделлю для додавання товарів у замовлення.
- Взаємодіє з View для взаємодії з користувачем через консоль.
- Обробляє винятки для некоректних даних та надає зворотній зв’язок користувачу.
'''

class SushiController:
    def __init__(self, model, view):
        self.model = model
        self.view = view

    def run(self):
        # Виведення меню
        self.view.display_menu()

        while True:
            # Запитує у View дані (які беруться з моделі)
            item_id, quantity = self.view.get_user_choice()

            # Реагує на дії користувача
            try:
                self.model.add_item_to_order(item_id, quantity)
            except ValueError as e:
                self.view.show_message(str(e))
                continue

            answer = self.view.ask_continue()
            if answer != 'так':
                break

        # Показуємо замовлення
        self.view.show_order()
        self.view.show_message("Дякуємо за замовлення!")